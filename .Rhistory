```{r}
slopegendermodel = lmer(wordsprod ~ time0 + sex + (1 + time0 | Sub), dataI, REML = FALSE)
summary(slopegendermodel)
```
There is a significant difference between males and females. Now let's see whether there's an interaction
```{r}
slopegendermodel = lmer(wordsprod ~ time0*sex + (1 + time0 | Sub), dataI, REML = FALSE)
summary(slopegendermodel)
```
No interaction
So, it seems that there is an additive effect of time and sex, such that ____. However, there is no interactive effect of time and sex.
```{r}
ggplot(dataI, aes(x=time0, y=wordsprod, color=sex)) +
geom_point(shape=1) +
geom_smooth(method=lm,
se=TRUE,
fullrange=TRUE)
```
Looking at the graph, it seems like we should check whether there is a polynomial effect by gender
```{r}
genderpoly = lmer(wordsprod ~ poly(time0, 2)*sex + (1 + time0 | Sub), dataI, REML = FALSE)
summary(genderpoly)
anova(slopegendermodel, genderpoly)
```
There is a polynomial effect of gender
###Summary
[Summarize effects here]
Question II
--------------------------------------
Set up the data
```{r}
dataII = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
dataII$train = factor(dataII$train, levels=c("0", "1"), labels = c("no training", "training"))
dataII$counsel = factor(dataII$counsel, levels=c("0", "1"), labels = c("counseling", "no counseling"))
dataII$counrep = factor(dataII$counrep, levels=c("0", "1"), labels = c("no answer", "yes answer"))
```
###Part i
Let's begin by plotting variables of interest
```{r}
plot(dataII[c(1:3, 5:6)])
```
Basic analysis
```{r}
qualitycounsel <- lm(quality ~ counsel, dataII)
summary(qualitycounsel)
```
There's a marginal relationship
Let's look at all 3
```{r}
counselbackground <- glm(counrep ~ age + educ + incom, family = binomial, data = dataII)
summary(counselbackground)
```
It seems like only age has an independent contribution, lets see if this is significant
```{r}
counselbackground <- glm(counrep ~ age, family = binomial, data = dataII)
summary(counselbackground)
```
it is. So, people of a certain age are mostly filling out his survey.
Now let's see what happens when we include these as covariates
```{r}
#rerunning for ease
qualitycounsel <- lm(quality ~ counsel, dataII)
summary(qualitycounsel)
agecovariate <- lm(quality ~ counsel + age, dataII)
summary(agecovariate)
anova(qualitycounsel, agecovariate)
```
Adding age affects his model, controlling for age there is a significant effect of conseling on quality of interaction. Now let's see if adding other background variables contribute
```{r}
ageinccov <- lm(quality ~ counsel + age + incom, dataII)
summary(ageinccov)
anova(agecovariate, ageinccov)
```
Adding income also improves his model
Finally, lets also add education
```{r}
allcovar <- lm(quality ~ counsel + age + incom + educ, dataII)
summary(allcovar)
anova(ageinccov, allcovar)
```
Adding education does not improve his model.
Therefore the best model is including age and income as covariates. Based on this model, there is a significant relationship between counseling and relationship quality. [report whole model]
###Part ii
Let's begin by plotting variables of interest
```{r}
plot(dataII[c(1:2, 4:5)])
```
Basic analysis
```{r}
qualitytrain <- lm(quality ~ train, dataII)
summary(qualitytrain)
```
There's a significant relationship. Let's see how covariates work with this
```{r}
agecovariatetrain <- lm(quality ~ train + age, dataII)
summary(agecovariatetrain)
anova(qualitytrain, agecovariatetrain)
```
Adding age improves the model
```{r}
ageeductrain <- lm(quality ~ train + age + educ, dataII)
summary(ageeductrain)
anova(agecovariatetrain, ageeductrain)
```
Adding education marginally improves the model. Training is still significant
###Part III
Let's test whether self-concept mediates the relationship between training and quality.
We'll begin with a Baron & Kenny analysis, then do a bootstrapping analysis (which is preferred).
```{r}
sobel = sobel(dataII$train, dataII$selfcon, dataII$quality)
sobel
z = sobel$z.value
z
p = pnorm(z, lower.tail=FALSE)
p
```
Based on Baron & Kenny, partial mediation
```{r warning=FALSE}
mediation(x = as.numeric(dataII$train),
mediator = dataII$selfcon,
dv = dataII$quality,
conf.level=.95, bootstrap=TRUE, B=1000)
```
Indirect.Effect estimate: 1.8544 CI low: 1.20089, CI high: 2.554
Bootstrapping gives us the same result, 0 isn't in confidence interval, indirect effect is sig.
###Part IV
Let's begin with a simple analysis of age and education on income
View(dataII)
additive = lm(incom ~ age + educ)
additive = lm(incom ~ age + educ, dataII)
summary(additive)
dataII$age <- factor(dataII$age, levels=c(1, 2, 3), labels=c('under 25', '25-35', 'over 35'))
dataII$educ <- factor(dataII$educ, levels=c(1, 2, 3), labels=c('no hs', 'attended college', 'finished college'))
educ.table = table(dataII$educ)
educ.table
chisqeduc = chisq.test(educ.table, p=c(1, 1, 1), rescale.p=T, simulate.p.value=F)
chisqeduc
dataII = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
dataII$train = factor(dataII$train, levels=c("0", "1"), labels = c("no training", "training"))
dataII$counsel = factor(dataII$counsel, levels=c("0", "1"), labels = c("counseling", "no counseling"))
dataII$counrep = factor(dataII$counrep, levels=c("0", "1"), labels = c("no answer", "yes answer"))
dataII = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
dataII$train = factor(dataII$train, levels=c("0", "1"), labels = c("no training", "training"))
dataII$counsel = factor(dataII$counsel, levels=c("0", "1"), labels = c("counseling", "no counseling"))
dataII$counrep = factor(dataII$counrep, levels=c("0", "1"), labels = c("no answer", "yes answer"))
educ.table = table(dataII$educFactor)
chisqeduc = chisq.test(educ.table, p=c(1, 1, 1), rescale.p=T, simulate.p.value=F)
educ.table
educ.table = table(dataII$educ)
educ.table = table(dataII$educ)
educ.table
dataII$educFactor <- factor(dataII$educ, levels=c(1, 2, 3), labels=c('no hs', 'attended college', 'finished college'))
educ.table = table(dataII$educFactor)
educ.table
ageeduc <- lm(educ ~ age, dataII)
summary(ageeduc)
```{r}
ggplot(dataII, aes(x=age, y=educ)) +
geom_point(shape=1) +
geom_smooth(method=lm,
se=TRUE,
fullrange=TRUE)
```
ggplot(dataII, aes(x=age, y=educ)) +
geom_smooth(method=lm,
se=TRUE,
fullrange=TRUE)
View(dataII)
income = lm(incom ~ age + educ + quality)
income = lm(incom ~ age + educ + quality, dataII)
summary(income)
ageincome = lm(incom ~ age)
ageincome = lm(incom ~ age, dataII)
summary(ageincome)
ageeduc.income = lm(incom ~ age + educ, dataII)
summary(ageeduc.income)
anova(ageincome, ageeduc.income)
fullmodel = lm(incom ~ age + educ + quality, dataII)
summary(fullmodel)
anova(ageeduc.income, fullmodel)
dataI = read.csv("http://stanford.edu/class/psych252/_downloads/vocab0.csv")
dataI$sex = factor(dataI$sex, levels=c("0", "1"), labels = c("male", "female"))
?anova
summary(slopemodel)
slopemodelpoly = lmer(wordsprod ~ poly(time0) + (1 + time0 | Sub), dataI, REML = TRUE)
summary(slopemodelpoly)
slopemodelpoly = lmer(wordsprod ~ poly(time0, 2) + (1 + time0 | Sub), dataI, REML = TRUE)
summary(slopemodelpoly)
slopegendermodel = lmer(wordsprod ~ time0 + sex + (1 + time0 | Sub), dataI, REML = FALSE)
summary(slopegendermodel)
slopegendermodelint = lmer(wordsprod ~ time0*sex + (1 + time0 | Sub), dataI, REML = FALSE)
summary(slopegendermodelint)
anova(slopegendermodel, slopegendermodelint)
dataII = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
contrasts(dataII$age)
dataII$age = factor(dataII$age, levels=c("1", "2", "3"), labels = c("under 25", "25-35", "over 35")))
dataII$age = factor(dataII$age, levels=c("1", "2", "3"), labels = c("under 25", "25-35", "over 35"))
contrasts(dataII$age)
contrasts(dataII$age) = cbind(c(-1, 0, 1), c(1, -2, 1))
contrasts(dataII$age)
dataII = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
dataII$train = factor(dataII$train, levels=c("0", "1"), labels = c("no training", "training"))
dataII$counsel = factor(dataII$counsel, levels=c("0", "1"), labels = c("counseling", "no counseling"))
dataII$counrep = factor(dataII$counrep, levels=c("0", "1"), labels = c("no answer", "yes answer"))
dataII$age = factor(dataII$age, levels=c("1", "2", "3"), labels = c("under 25", "25-35", "over 35"))
contrasts(dataII$age) = cbind(c(-1, 0, 1), c(1, -2, 1))
dataII$educ = factor(dataII$educ, levels=c("1", "2", "3"), labels = c("no hs", "started college", "finished college"))
contrasts(dataII$educ) = cbind(c(-1, 0, 1), c(1, -2, 1))
contrasts(dataII$counsel) = cbind(c("1", "0"), c("0", "1"))
contrasts(dataII$counsel)
contrasts(dataII$counsel) = c("1", "0")
contrasts(dataII$counsel)
dataII = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
dataII$train = factor(dataII$train, levels=c("0", "1"), labels = c("no training", "training"))
dataII$counsel = factor(dataII$counsel, levels=c("0", "1"), labels = c("counseling", "no counseling"))
dataII$counrep = factor(dataII$counrep, levels=c("0", "1"), labels = c("no answer", "yes answer"))
dataII$age = factor(dataII$age, levels=c("1", "2", "3"), labels = c("under 25", "25-35", "over 35"))
contrasts(dataII$age) = cbind(c(-1, 0, 1), c(1, -2, 1))
dataII$educ = factor(dataII$educ, levels=c("1", "2", "3"), labels = c("no hs", "started college", "finished college"))
contrasts(dataII$educ) = cbind(c(-1, 0, 1), c(1, -2, 1))
dataII$counsel
contrasts(dataII$counsel)
contrasts(dataII$counsel) = c("1", "0")
contrasts(dataII$counsel)
contrasts(dataII$counsel)
dataII = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
dataII$train = factor(dataII$train, levels=c("0", "1"), labels = c("no training", "training"))
dataII$counsel = factor(dataII$counsel, levels=c("1", "0"), labels = c("counseling", "no counseling"))
dataII$counrep = factor(dataII$counrep, levels=c("0", "1"), labels = c("no answer", "yes answer"))
dataII$age = factor(dataII$age, levels=c("1", "2", "3"), labels = c("under 25", "25-35", "over 35"))
contrasts(dataII$age) = cbind(c(-1, 0, 1), c(1, -2, 1))
dataII$educ = factor(dataII$educ, levels=c("1", "2", "3"), labels = c("no hs", "started college", "finished college"))
contrasts(dataII$educ) = cbind(c(-1, 0, 1), c(1, -2, 1))
contrasts(dataII$counsel)
dataII$counsel = factor(dataII$counsel, levels=c("1", "0"), labels = c("no counseling", "counseling"))
contrasts(dataII$counsel)
dataII$counsel = factor(dataII$counsel, levels=c("0", "1"), labels = c("no counseling", "counseling"))
contrasts(dataII$counsel)
AIC(counselbackground, counselage)
library(GGally)
install.packages("GGally")
library(GGally)
ggpairs(dataII[c(1:2, 4:5)])
ggpairs(dataII[c(1:3, 5:6)])
agecovariatetrain <- lm(quality ~ train + age, dataII)
pnorm(4.98)
pnorm(4.98, lower.tail = FALSE)
correlation = data.frame(dataII)
z = cor(dataII)
dataIIorig = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
correlation = data.frame(dataIIorig)
z = cor(correlation)
z
require(lattice)
levelplot(z, panel = panel.levelplot.raster,par.settings=list(regions=list(col=heat.colors(100))))
model = lm(quality~age+educ+incom+train+counsel+selfcon)
summary(model)
model = lm(quality~age+educ+incom+train+counsel+selfcon, dataII)
library(ggplot2)
library(dplyr)
library(psych)
library(lme4)
library(lmerTest)
library(multilevel)
library(MBESS)
library(GGally)
options(digits=3)
dataI = read.csv("http://stanford.edu/class/psych252/_downloads/vocab0.csv")
dataI$sex = factor(dataI$sex, levels=c("0", "1"), labels = c("male", "female"))
dataI$time = dataI$time-3
dataI = read.csv("http://stanford.edu/class/psych252/_downloads/vocab0.csv")
dataI$sex = factor(dataI$sex, levels=c("0", "1"), labels = c("male", "female"))
dataI$time = scale(dataI$time, center=TRUE, scale=FALSE)
dataI = read.csv("http://stanford.edu/class/psych252/_downloads/vocab0.csv")
dataI$sex = factor(dataI$sex, levels=c("0", "1"), labels = c("male", "female"))
dataI$time = dataI$time-3 #center time
?sobel
dataIIorig = read.csv("http://stanford.edu/class/psych252/_downloads/couples1.csv")
dataII <- dataIIorig
dataII$train = factor(dataII$train, levels=c("0", "1"), labels = c("no training", "training"))
dataII$counsel = factor(dataII$counsel, levels=c("0", "1"), labels = c("no counseling", "counseling"))
dataII$counrep = factor(dataII$counrep, levels=c("0", "1"), labels = c("no answer", "yes answer"))
dataII$age = factor(dataII$age, levels=c("1", "2", "3"), labels = c("under 25", "25-35", "over 35"))
contrasts(dataII$age) = cbind(c(-1, 0, 1), c(1, -2, 1))
dataII$educ = factor(dataII$educ, levels=c("1", "2", "3"), labels = c("no hs", "started college", "finished college"))
contrasts(dataII$educ) = cbind(c(-1, 0, 1), c(1, -2, 1))
contrasts(dataI$sex)
contrasts(dataI$sex) <- c(1, 0)
contrasts(dataI$sex)
dat2 <- read.csv("data/janiszewski_rep_cleaned.csv")
setwd("~/Desktop/2016_Winter/Stats_254/PS_1/Stats-254-PS1")
dat2 <- read.csv("data/janiszewski_rep_cleaned.csv")
d.tidy <- dat2 %>%
select(WorkerId, Input.condition,
starts_with("Answer"),
starts_with("Input")) %>%
rename(workerid = WorkerId,
condition = Input.condition,
plasma_anchor = Input.price1,
dog_anchor = Input.price2,
sushi_anchor = Input.price3,
dog_cost = Answer.dog_cost,
plasma_cost = Answer.plasma_cost,
sushi_cost = Answer.sushi_cost) %>%
gather(name, cost,
dog_anchor, plasma_anchor, sushi_anchor,
dog_cost, plasma_cost, sushi_cost) %>%
separate(name, c("item", "type"), "_") %>%
spread(type, cost)
rm(list=ls())
source("helper/useful.R")
library("knitr")
d.tidy <- dat2 %>%
select(WorkerId, Input.condition,
starts_with("Answer"),
starts_with("Input")) %>%
rename(workerid = WorkerId,
condition = Input.condition,
plasma_anchor = Input.price1,
dog_anchor = Input.price2,
sushi_anchor = Input.price3,
dog_cost = Answer.dog_cost,
plasma_cost = Answer.plasma_cost,
sushi_cost = Answer.sushi_cost) %>%
gather(name, cost,
dog_anchor, plasma_anchor, sushi_anchor,
dog_cost, plasma_cost, sushi_cost) %>%
separate(name, c("item", "type"), "_") %>%
spread(type, cost)
kable(pcts)
pcts <- d.tidy %>%
mutate(pct_change = (anchor-cost)/anchor*100) %>%
group_by(item, condition) %>%
summarise("percentchange" = mean(pct_change, na.rm=TRUE))
kable(pcts)
z.scores <- d.tidy %>%
mutate(change = anchor - cost) %>%
group_by(item) %>%
mutate(scaled = scale(change)[,1])
dat2 <- read.csv("data/janiszewski_rep_cleaned.csv")
d.tidy <- dat2 %>%
select(WorkerId, Input.condition,
starts_with("Answer")) %>%
rename(workerid = WorkerId,
condition = Input.condition,
dog_cost = Answer.dog_cost,
plasma_cost = Answer.plasma_cost,
sushi_cost = Answer.sushi_cost)
d.tidy <- dat2 %>%
select(WorkerId, Input.condition,
starts_with("Answer"),
starts_with("Input")) %>%
rename(workerid = WorkerId,
condition = Input.condition,
plasma_anchor = Input.price1,
dog_anchor = Input.price2,
sushi_anchor = Input.price3,
dog_cost = Answer.dog_cost,
plasma_cost = Answer.plasma_cost,
sushi_cost = Answer.sushi_cost) %>%
gather(name, cost,
dog_anchor, plasma_anchor, sushi_anchor,
dog_cost, plasma_cost, sushi_cost) %>%
separate(name, c("item", "type"), "_") %>%
spread(type, cost)
pcts <- d.tidy %>%
mutate(pct_change = (anchor-cost)/anchor*100) %>%
group_by(item, condition) %>%
summarise("percentchange" = mean(pct_change, na.rm=TRUE))
kable(pcts)
z.scores <- d.tidy %>%
mutate(change = anchor - cost) %>%
group_by(item) %>%
mutate(scaled = scale(change)[,1])
z.scores <- d.tidy %>%
mutate(change = anchor - cost) %>%
group_by(item) %>%
mutate(scaled = scale(change)[,1]) %>%
ungroup()
group_by(item, condition) %>%
summarise("percentchange" = mean(scaled, na.rm=TRUE))
z.scores <- d.tidy %>%
mutate(change = anchor - cost) %>%
group_by(item) %>%
mutate(scaled = scale(change)[,1]) %>%
ungroup()  %>%
group_by(item, condition, add=FALSE) %>%
summarize("meanthang!"=mean(scaled,na.rm=TRUE) )
z.scores <- d.tidy %>%
mutate(change = anchor - cost) %>%
group_by(item) %>%
mutate(scaled = scale(change)[,1]) %>%
ungroup()  %>%
group_by(item, condition, add=FALSE) %>%
summarize("groupmeans"=mean(scaled,na.rm=TRUE) )
qplot(item, z, fill=condition,
position="dodge",
stat="identity", geom="bar",
data=z.scores)
qplot(item, groupmeans, fill=condition,
position="dodge",
stat="identity", geom="bar",
data=z.scores)
sessioninfo()
sessionInfo()
ggplot(d.gathered, aes(x=cost, fill=condition, facet=type)) +
geom_histogram(position="dodge")
d.gathered <- d.tidy %>%
gather(type, cost, dog_cost, plasma_cost, sushi_cost)
---
title: 'Psych 254 W15 PS #1'
author: "Rhia Catapano"
date: "January 21, 2015"
output: html_document
---
This is problem set #1, practicing the packages tidyr and dplyr.
Preliminaries
-------------
We begin by clearing the working directory and loading in a set of useful packages.
```{r prelims, message=FALSE, warning=FALSE}
rm(list=ls())
source("helper/useful.R")
library("knitr")
```
Part 1: Data cleaning
---------------------
Load in data
```{r data1}
dat <- read.csv("data/janiszewski_rep_exercise.csv")
dat_original <- dat
```
Check for duplicates
```{r}
dat[duplicated(dat),]
#there are no rows that are completely duplicated
duplicates <- dat[duplicated(dat$WorkerId),]
duplicates
#however, there are duplicate IDs (48,58, 62)
#so, we want the data frame with all of the duplicates removed
dat <- dat[!duplicated(dat$WorkerId),]
```
Check structure/data types
```{r}
str(dat)
#it looks like the 3 problematic columns are dog_cost, plasma_cost, and sushi_cost. These three should be numeric, but instead are factors.
```
Make incorrectly factored variables into numeric
```{r}
#Clean up the answers in dog_cost
dat[which(dat$Answer.dog_cost == "five hundred"),]$Answer.dog_cost <- 500
dat[which(dat$Answer.dog_cost == "2,000"), ]$Answer.dog_cost <- 2000
dat[which(dat$Answer.dog_cost == "2499.99"), ]$Answer.dog_cost <- round(as.numeric(as.character(dat[which(dat$Answer.dog_cost == "2499.99"), ]$Answer.dog_cost)))
dat$Answer.dog_cost <- as.numeric(as.character(dat$Answer.dog_cost))
#Clean up the answers in plasma_cost
dat[which(dat$Answer.plasma_cost == "4999.99"), ]$Answer.plasma_cost <- round(as.numeric(as.character(dat[which(dat$Answer.plasma_cost == "4999.99"), ]$Answer.plasma_cost)))
dat[which(dat$Answer.plasma_cost == "0.45"), ]$Answer.plasma_cost <- 4500
#in my own data sets I'd probably exclude this person instead of assuming what they meant, but based on the cleaned version, it seems like we're assuming that they meant 4500.
dat[which(dat$Answer.plasma_cost == "4,000"), ]$Answer.plasma_cost <- 4000
dat$Answer.plasma_cost <- as.numeric(as.character(dat$Answer.plasma_cost))
#Clean up answers in sushi_cost
dat[which(dat$Answer.sushi_cost == "ehight"), ]$Answer.sushi_cost <- 8
dat[which(dat$Answer.sushi_cost == "7,75"), ]$Answer.sushi_cost <- 7.75
dat$Answer.sushi_cost <- as.numeric(as.character(dat$Answer.sushi_cost))
write.csv(dat, "janiszewski_rep_cleaned_Rhia.csv")
```
Part 2: Making these data tidy
------------------------------
Load in the data
```{r data2}
dat2 <- read.csv("data/janiszewski_rep_cleaned.csv")
```
Remove columns we don't need and rename variables
```{r select}
d.tidy <- dat2 %>%
select(WorkerId, Input.condition,
starts_with("Answer")) %>%
rename(workerid = WorkerId,
condition = Input.condition,
dog_cost = Answer.dog_cost,
plasma_cost = Answer.plasma_cost,
sushi_cost = Answer.sushi_cost)
```
Gather the data into a tidy data frame
```{r}
d.gathered <- d.tidy %>%
gather(type, cost, dog_cost, plasma_cost, sushi_cost)
```
Spread into a wide format
```{r spread}
d.wide <- d.gathered %>%
spread(type, cost)
```
Part 3: Manipulating the data using dplyr
-----------------------------------------
Histogram representing the number of people in each price range for each item.
```{r, warning=FALSE, message=FALSE}
ggplot(d.gathered, aes(x=cost, fill=condition, facet=type)) +
geom_histogram(position="dodge")
```
ggplot(d.gathered, aes(x=cost, fill=type)) +
geom_histogram(position="dodge")
ggplot(data=d.gathered, aes(x=cost, fill=condition)) + facet_wrap(~type, scale="free") + geom_histogram(position="dodge")
ggplot(data=d.gathered, aes(x=cost, fill=condition)) + facet_wrap(~type, scale="free") + geom_density(alpha=0.5)
ggplot(data=d.gathered, aes(x=cost, fill=condition)) + facet_wrap(~type, scale="free") + geom_histogram(position="dodge")
ggplot(data=d.gathered, aes(x=cost, fill=condition)) + facet_wrap(~type, scale="free") + geom_density(alpha=0.5)
ggplot(data=d.gathered, aes(x=cost, fill=condition)) + facet_wrap(~type, scale="free") + geom_histogram(position="dodge")
ggplot(data=d.gathered, aes(x=cost, fill=condition)) + facet_wrap(~type, scale="free") + geom_histogram(position="dodge", bins=10)
ggplot(data=d.gathered, aes(x=cost, fill=condition)) + facet_wrap(~type, scale="free") + geom_histogram(position="dodge", bins=8)
ggplot(data=d.gathered, aes(x=cost, fill=condition)) + facet_wrap(~type, scale="free") + geom_histogram(position="dodge", binwidth=8)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
